{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_ref","data","console","log","a","createElement","allMarkdownRemark","edges","map","_ref2","node","key","id","frontmatter","title","date","dangerouslySetInnerHTML","__html","html","m","module","exports","require","default","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_10__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_10___default","typography","Typography","lincolnTheme","rhythm","scale","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","render","children","object","func","Header","siteTitle","toString","defaultProps","Layout","gatsby_browser_entry_StaticQuery","Fragment","header","site","siteMetadata","style","margin","maxWidth","padding","paddingTop","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-index-js-a4ac1f4087fa89b70a24.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Layout from \"../components/layout\"\n\n\nexport default ({ data }) => {\n  console.log(data)\n  return (\n    <Layout>\n      <div>\n        {/* <h4>{data.allMarkdownRemark.totalCount} Posts</h4> */}\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <h3>\n              {node.frontmatter.title}{\" \"}\n              <span>\n                â€” {node.frontmatter.date}\n              </span>\n            </h3>\n            <div dangerouslySetInnerHTML={{__html: node.html}}></div>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n          html\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nimport altonTheme from 'typography-theme-alton'\nimport deYoungTheme from 'typography-theme-de-young'\nimport doelgerTheme from 'typography-theme-doelger'\nimport elkGlenTheme from 'typography-theme-elk-glen'\nimport funstonTheme from 'typography-theme-funston'\nimport grandViewTheme from 'typography-theme-grand-view'\nimport irvingTheme from 'typography-theme-irving'\nimport judahTheme from 'typography-theme-judah'\nimport lawtonTheme from 'typography-theme-lawton'\nimport lincolnTheme from 'typography-theme-lincoln'  //\nimport kirkhamTheme from 'typography-theme-kirkham'\nimport moragaTheme from 'typography-theme-moraga'\nimport noriegaTheme from 'typography-theme-noriega'\nimport oceanBeachTheme from 'typography-theme-ocean-beach'  //\nimport parnassusTheme from 'typography-theme-parnassus'\nimport stAnnesTheme from 'typography-theme-st-annes'  // needs bigger font\nimport stowLakeTheme from 'typography-theme-stow-lake'\n\nimport sutroTheme from 'typography-theme-sutro'\nimport sternGroveTheme from 'typography-theme-stern-grove'\nimport twinPeaksTheme from 'typography-theme-twin-peaks'\nimport githubTheme from 'typography-theme-github'  //\n\nconst typography = new Typography(lincolnTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport typography from \"../utils/typography\"\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <style>{typography.toString()}</style>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}